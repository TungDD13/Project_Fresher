@model FA.JustBlog.Core.Models.Post

@Styles.Render("~/Content/form/dist/css")

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Meta, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Meta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Meta, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.UrlSlug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.UrlSlug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UrlSlug, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Published)
                    @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.LabelFor(model => model.PostedOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="input-group date">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.EditorFor(model => model.PostedOn, new { htmlAttributes = new { @class = "form-control customdate", id = "datepicker" } })
                    @Html.ValidationMessageFor(model => model.PostedOn, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Modified, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                <div class="input-group date">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.EditorFor(model => model.Modified, new { htmlAttributes = new { @class = "form-control customdate" }, id = "datepicker" })
                    @Html.ValidationMessageFor(model => model.Modified, "", new { @class = "text-danger" })
                </div>
            </div>


            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-1">Tags</label>
            <div class="col-md-10">
                <select class="form-control select2 " name="listTag" id="listTag" multiple="multiple" data-placeholder="Select a State">
                    @foreach (var item in ViewBag.listTag)
                    {
                        <option value="@item.Name" >@item.Name</option>
                    }
                </select>
                @*@Html.ListBoxFor(m => m.listTag, new MultiSelectList(Tags, "Name", "Name", Model.SelectedTags), new { id = "multiple", @class = "form-control select2" })*@
            </div>
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostContent, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.PostContent, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.PostContent, new { htmlAttributes = new { @class = "form-control" }, rows = "6", Style = "width:100%;" })
                @Html.ValidationMessageFor(model => model.PostContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>tinymce.init({selector:'textarea'});</script>




